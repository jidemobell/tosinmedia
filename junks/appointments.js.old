// import { initializeApp, getApps } from "firebase/app";
// import { getDatabase, ref, push, get, startAfter } from "firebase/database";

// Firebase config (reuse your shared config)
// Firebase config (reuse your shared config if possible)
// const firebaseConfig = {
//   apiKey: "AIzaSyAV9cbQPddGS927a-XJkgkMdiwwZNUbV9I",
//   authDomain: "petermark-9ba50.firebaseapp.com",
//   databaseURL: "https://petermark-9ba50-default-rtdb.firebaseio.com",
//   projectId: "petermark-9ba50",
//   storageBucket: "petermark-9ba50.firebasestorage.app",
//   messagingSenderId: "892056005886",
//   appId: "1:892056005886:web:f9d7858357d71cf9ea89af"
// };



// const app = getApps().length ? getApps()[0] : initializeApp(firebaseConfig);
// const database = getDatabase(app);


// const sampleAppointment = {
  // "title": "Test",
  // "start": "2023-01-01T09:00:00Z",
  // "end": "2023-01-01T10:00:00Z",
  // "description": "Test",
  // "location": "Online",
  // "source": "google-calendar",
  // "appointmentId": "abc123xyz"
//   title: "Sample Appointment",
//   start: "2023-01-01T09:00:00Z",
//   end: "2023-01-01T10:00:00Z",
//   description: "This is a sample appointment.",
//   location: "Online",
//   source: "google-calendar",
//   appointmentId: "abc123xyz",
// }

// Unified handler for appointments
// export async function handleAppointments(request) {
//   const url = new URL(request.url);

  // if (url.pathname === '/api/appointments' && request.method === 'POST') {
  //   const data = await request.json();
  //   const dbRef = ref(database, 'appointments');
  //   const result = await push(dbRef, data);
  //   return new Response(JSON.stringify({ success: true, id: result.key }), { status: 201 });
  // }
//   if (request.method === 'POST') {
//     const data = await request.json();
//     return new Response(JSON.stringify({ received: data }), { status: 200 });
//   }

//   if (url.pathname === '/api/appointments' && request.method === 'GET') {
//     const dbRef = ref(database, 'appointments');
//     const snapshot = await get(dbRef);
//     const appointments = snapshot.exists() ? snapshot.val() : {};
//     return new Response(JSON.stringify(appointments), { status: 200 });
//   }

//   return new Response('Not found', { status: 404 });
// }